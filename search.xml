<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java排序算法</title>
    <url>/2020/05/08/Java%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="常见Java排序算法"><a href="#常见Java排序算法" class="headerlink" title="常见Java排序算法"></a>常见Java排序算法</h1><h2 id="排序算法分类："><a href="#排序算法分类：" class="headerlink" title="排序算法分类："></a>排序算法分类：</h2><p><img src="https://gitee.com/xu_ouyang/mapdepot2/raw/master/paixu.png" alt="paixu"></p>
<h3 id="算法时间复杂度"><a href="#算法时间复杂度" class="headerlink" title="算法时间复杂度"></a>算法时间复杂度</h3><ul>
<li>一般情况下，算法中的基本操作语句的重复执行次数是规模为n的某个函数，用T(n)表示。若有某个辅助函数f(n)，使n趋向于无穷大时，T(n)/f(n)的极限值为不为零对常数，记作T(n)=O(f(n))，O(f(n))为算法时间复杂度。</li>
</ul>
<h3 id="算法空间复杂度"><a href="#算法空间复杂度" class="headerlink" title="算法空间复杂度"></a>算法空间复杂度</h3><ul>
<li>定义为该算法所耗费的存储空间</li>
</ul>
<h3 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h3><p><img src="https://gitee.com/xu_ouyang/mapdepot2/raw/master/maopao1.png" alt="maopao1"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//冒泡排序时间复杂度：0(n^2)</span></span><br><span class="line">		<span class="keyword">int</span> temp = <span class="number">0</span>; <span class="comment">//临时变量</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//标识变量，表示是否交换过</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">				<span class="comment">//如果前面的数比后面数大，则交换</span></span><br><span class="line">				<span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">					flag = <span class="keyword">true</span>;</span><br><span class="line">					temp = arr[j];</span><br><span class="line">					arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">					arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (!flag) &#123;<span class="comment">//在第一趟排序中，一次也没有交换</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				flag = <span class="keyword">false</span>; <span class="comment">//重置flag</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2. 选择排序"></a>2. 选择排序</h3><p><img src="https://gitee.com/xu_ouyang/mapdepot2/raw/master/select.png" alt="select"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//选择排序时间复杂度：O(n^2)</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> minIndex = i;</span><br><span class="line">			<span class="keyword">int</span> min = arr[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (min &gt; arr[j]) &#123; <span class="comment">// 说明假定的最小值，并不是最小</span></span><br><span class="line">					min = arr[j]; <span class="comment">// 重置min</span></span><br><span class="line">					minIndex = j; <span class="comment">// 重置minIndex</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 将最小值放在arr[0], 即交换</span></span><br><span class="line">			<span class="keyword">if</span> (minIndex != i) &#123;</span><br><span class="line">				arr[minIndex] = arr[i];</span><br><span class="line">				arr[i] = min;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3.插入排序"></a>3.插入排序</h3><p><img src="https://gitee.com/xu_ouyang/mapdepot2/raw/master/insert.png" alt="insert"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> insertVal = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> insertIndex = <span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">			<span class="comment">//定义待插入的数</span></span><br><span class="line">			insertVal = arr[i];</span><br><span class="line">			insertIndex = i - <span class="number">1</span>; <span class="comment">// 即arr[1]的前面这个数的下标</span></span><br><span class="line">	</span><br><span class="line">			<span class="comment">// 给insertVal 找到插入的位置</span></span><br><span class="line">			<span class="comment">// 说明</span></span><br><span class="line">			<span class="comment">// 1. insertIndex &gt;= 0 保证insertVal找到插入的位置，不越界</span></span><br><span class="line">			<span class="comment">// 2. insertVal &lt; arr[insertIndex] 待插入的数，还没有找到插入的位置</span></span><br><span class="line">			<span class="comment">// 3. 就需要将 arr[insertIndex] 后移</span></span><br><span class="line">			<span class="keyword">while</span> (insertIndex &gt;= <span class="number">0</span> &amp;&amp; insertVal &lt; arr[insertIndex]) &#123;</span><br><span class="line">				arr[insertIndex + <span class="number">1</span>] = arr[insertIndex];<span class="comment">// arr[insertIndex]</span></span><br><span class="line">				insertIndex--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// 当退出while循环时，说明插入的位置找到，insertIndex + 1</span></span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(insertIndex + <span class="number">1</span> != i) &#123;</span><br><span class="line">				arr[insertIndex + <span class="number">1</span>] = insertVal;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>



<h3 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4.希尔排序"></a>4.希尔排序</h3><p><img src="https://gitee.com/xu_ouyang/mapdepot2/raw/master/shell.png" alt="shell"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 增量gap, 并逐步的缩小增量</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">//从第gap个元素，逐个对其所在的组进行直接插入排序</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">				<span class="keyword">int</span> j = i;</span><br><span class="line">				<span class="keyword">int</span> temp = arr[j];</span><br><span class="line">				<span class="keyword">if</span> (arr[j] &lt; arr[j - gap]) &#123;</span><br><span class="line">					<span class="keyword">while</span> (j - gap &gt;= <span class="number">0</span> &amp;&amp; temp &lt; arr[j - gap]) &#123;</span><br><span class="line">						<span class="comment">//移动</span></span><br><span class="line">						arr[j] = arr[j-gap];</span><br><span class="line">						j -= gap;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="comment">//当退出while后，就给temp找到插入的位置</span></span><br><span class="line">					arr[j] = temp;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
</search>
